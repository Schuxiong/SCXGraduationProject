<?xml version="1.0" encoding="UTF-8"?>
<svg width="800" height="1000" xmlns="http://www.w3.org/2000/svg">
  <!-- 样式定义 -->
  <defs>
    <!-- 渐变定义 -->
    <linearGradient id="processGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#3498db;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#2980b9;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="decisionGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#f39c12;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#d35400;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="ioGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#2ecc71;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#27ae60;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="apiGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#9b59b6;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#8e44ad;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="fallbackGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#e74c3c;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#c0392b;stop-opacity:1" />
    </linearGradient>
    
    <filter id="dropShadow" x="-20%" y="-20%" width="140%" height="140%">
      <feGaussianBlur in="SourceAlpha" stdDeviation="3" />
      <feOffset dx="2" dy="2" result="offsetblur" />
      <feComponentTransfer>
        <feFuncA type="linear" slope="0.3" />
      </feComponentTransfer>
      <feMerge>
        <feMergeNode />
        <feMergeNode in="SourceGraphic" />
      </feMerge>
    </filter>
    
    <style type="text/css">
      .background { fill: #f8f9fa; }
      .title { font-family: 'Microsoft YaHei', Arial, sans-serif; font-size: 28px; font-weight: bold; fill: #2c3e50; text-anchor: middle; }
      .subtitle { font-family: 'Microsoft YaHei', Arial, sans-serif; font-size: 20px; font-weight: bold; fill: #34495e; text-anchor: middle; }
      .box { stroke: #34495e; stroke-width: 2; rx: 12; ry: 12; filter: url(#dropShadow); transition: all 0.3s ease; }
      .box:hover { filter: url(#hoverEffect); transform: scale(1.05); cursor: pointer; }
      .process { fill: url(#processGradient); }
      .decision { fill: url(#decisionGradient); }
      .io { fill: url(#ioGradient); }
      .api { fill: url(#apiGradient); }
      .fallback { fill: url(#fallbackGradient); }
      .text { font-family: 'Microsoft YaHei', Arial, sans-serif; font-size: 14px; fill: white; text-anchor: middle; font-weight: 500; text-shadow: 0 1px 2px rgba(0,0,0,0.2); }
      .text:hover { font-weight: 700; }
      .arrow { stroke: #34495e; stroke-width: 2.5; fill: none; marker-end: url(#arrowhead); stroke-dasharray: 5,2; stroke-dashoffset: 0; animation: flowAnimation 30s linear infinite; transition: all 0.3s ease; }
      @keyframes flowAnimation { to { stroke-dashoffset: 200; } }
      .note { font-family: 'Microsoft YaHei', Arial, sans-serif; font-size: 13px; fill: #7f8c8d; }
      .phase { font-family: 'Microsoft YaHei', Arial, sans-serif; font-size: 18px; font-weight: bold; fill: #16a085; }
    </style>
    
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#34495e" />
    </marker>
    
    <!-- 动画定义 -->
    <animate id="flowAnimation" attributeName="stroke-dashoffset" from="100" to="0" dur="1.5s" repeatCount="indefinite" />
    
    <!-- 交互提示 -->
    <filter id="hoverEffect" x="-20%" y="-20%" width="140%" height="140%">
      <feGaussianBlur in="SourceAlpha" stdDeviation="2" />
      <feOffset dx="0" dy="0" result="offsetblur" />
      <feComponentTransfer>
        <feFuncA type="linear" slope="0.5" />
      </feComponentTransfer>
      <feFlood flood-color="#3498db" flood-opacity="0.3" />
      <feComposite in2="offsetblur" operator="in" />
      <feMerge>
        <feMergeNode />
        <feMergeNode in="SourceGraphic" />
      </feMerge>
    </filter>
  </defs>
  
  <!-- 背景 -->
  <rect width="800" height="1000" class="background" />
  
  <!-- 标题背景 -->
  <rect x="150" y="10" width="500" height="50" rx="15" ry="15" fill="#ecf0f1" stroke="#bdc3c7" stroke-width="1" filter="url(#dropShadow)" />
  
  <!-- 标题 -->
  <text x="400" y="45" class="title">DeepseekAPI 国际象棋人机对弈流程</text>
  
  <!-- 阶段1: 初始化 -->
  <rect x="80" y="65" width="250" height="30" rx="8" ry="8" fill="#e8f6f3" stroke="#16a085" stroke-width="1" opacity="0.8" />
  <text x="110" y="85" class="phase">阶段1: 初始化与API检查</text>
  
  <!-- 流程图开始 -->
  <rect x="350" y="90" width="100" height="40" class="box process" />
  <text x="400" y="115" class="text">开始</text>
  
  <!-- 初始化棋盘 -->
  <rect x="350" y="160" width="100" height="40" class="box process" />
  <text x="400" y="185" class="text">初始化棋盘</text>
  <path d="M 400 130 L 400 160" class="arrow" />
  
  <!-- 检查API可用性 -->
  <rect x="350" y="230" width="100" height="40" class="box api" />
  <text x="400" y="255" class="text">检查API可用性</text>
  <path d="M 400 200 L 400 230" class="arrow" />
  
  <!-- API可用性判断 -->
  <polygon points="400,300 450,340 400,380 350,340" class="box decision" />
  <text x="400" y="345" class="text">API可用?</text>
  <path d="M 400 270 L 400 300" class="arrow" />
  
  <!-- API不可用分支 -->
  <rect x="200" y="340" width="100" height="40" class="box fallback" />
  <text x="250" y="365" class="text">使用备用策略</text>
  <path d="M 350 340 L 300 340" class="arrow" />
  <text x="320" y="330" class="note">否</text>
  
  <!-- API可用分支 -->
  <path d="M 400 380 L 400 410" class="arrow" />
  <text x="410" y="395" class="note">是</text>
  
  <!-- 阶段2: 用户交互 -->
  <rect x="80" y="415" width="200" height="30" rx="8" ry="8" fill="#e8f6f3" stroke="#16a085" stroke-width="1" opacity="0.8" />
  <text x="110" y="435" class="phase">阶段2: 用户交互</text>
  
  <!-- 等待用户走棋 -->
  <rect x="350" y="410" width="100" height="40" class="box io" />
  <text x="400" y="435" class="text">等待用户走棋</text>
  
  <!-- 用户走棋 -->
  <rect x="350" y="480" width="100" height="40" class="box io" />
  <text x="400" y="505" class="text">用户走棋</text>
  <path d="M 400 450 L 400 480" class="arrow" />
  
  <!-- 更新棋盘状态 -->
  <rect x="350" y="550" width="100" height="40" class="box process" />
  <text x="400" y="575" class="text">更新棋盘状态</text>
  <path d="M 400 520 L 400 550" class="arrow" />
  
  <!-- 检查游戏状态 -->
  <polygon points="400,620 450,660 400,700 350,660" class="box decision" />
  <text x="400" y="665" class="text">游戏结束?</text>
  <path d="M 400 590 L 400 620" class="arrow" />
  
  <!-- 游戏结束分支 -->
  <rect x="550" y="640" width="100" height="40" class="box process" />
  <text x="600" y="665" class="text">显示结果</text>
  <path d="M 450 660 L 550 660" class="arrow" />
  <text x="500" y="650" class="note">是</text>
  
  <!-- 游戏继续分支 -->
  <path d="M 400 700 L 400 730" class="arrow" />
  <text x="410" y="715" class="note">否</text>
  
  <!-- 阶段3: API调用 -->
  <rect x="80" y="735" width="250" height="30" rx="8" ry="8" fill="#e8f6f3" stroke="#16a085" stroke-width="1" opacity="0.8" />
  <text x="110" y="755" class="phase">阶段3: DeepseekAPI调用</text>
  
  <!-- 准备API请求 -->
  <rect x="350" y="730" width="100" height="40" class="box process" />
  <text x="400" y="755" class="text">准备API请求</text>
  
  <!-- 构建提示词 -->
  <rect x="350" y="800" width="100" height="40" class="box process" />
  <text x="400" y="825" class="text">构建提示词</text>
  <path d="M 400 770 L 400 800" class="arrow" />
  
  <!-- 调用DeepseekAPI -->
  <rect x="350" y="870" width="100" height="40" class="box api" />
  <text x="400" y="895" class="text">调用DeepseekAPI</text>
  <path d="M 400 840 L 400 870" class="arrow" />
  
  <!-- 解析API响应 -->
  <rect x="350" y="940" width="100" height="40" class="box process" />
  <text x="400" y="965" class="text">解析API响应</text>
  <path d="M 400 910 L 400 940" class="arrow" />
  
  <!-- 机器人走棋 -->
  <rect x="550" y="940" width="100" height="40" class="box io" />
  <text x="600" y="965" class="text">机器人走棋</text>
  <path d="M 450 960 L 550 960" class="arrow" />
  
  <!-- 循环回到用户走棋 -->
  <path d="M 600 940 L 600 505 L 450 505" class="arrow" />
  
  <!-- 注释说明背景 -->
  <rect x="80" y="970" width="640" height="120" rx="10" ry="10" fill="#f5f6fa" stroke="#bdc3c7" stroke-width="1" filter="url(#dropShadow)" opacity="0.9" />
  
  <!-- 注释说明 -->
  <text x="400" y="995" class="subtitle">流程说明</text>
  <text x="110" y="1020" class="note" text-anchor="start">• 应用启动时检查DeepseekAPI可用性</text>
  <text x="110" y="1045" class="note" text-anchor="start">• 用户走棋后，通过DeepseekAPI获取机器人的下一步走法</text>
  <text x="110" y="1070" class="note" text-anchor="start">• API返回JSON格式的走法、思考过程和消息</text>
  <text x="400" y="1070" class="note" text-anchor="start">• 如API不可用，系统会使用备用策略</text>
</svg>